<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sichuang.service.impl.dao.impl.mybatis.FenceMapper" >
  <resultMap id="BaseResultMap" type="com.sichuang.bean.entity.Fence" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="shape" property="shape" jdbcType="INTEGER" />
    <result column="radius" property="radius" jdbcType="DOUBLE" />
    <result column="purpose" property="purpose" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="DATE" />
    <result column="endTime" property="endtime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sichuang.bean.entity.Fence" extends="BaseResultMap" >
    <result column="spots" property="spots" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, number, shape, radius, purpose, createTime, endTime, remark, status, type
  </sql>
  <sql id="Blob_Column_List" >
    spots
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.sichuang.bean.entity.FenceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sichuang.bean.entity.FenceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from fence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sichuang.bean.entity.FenceExample" >
    delete from fence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sichuang.bean.entity.Fence" >
    insert into fence (id, name, number, 
      shape, radius, purpose, 
      createTime, endTime, remark, 
      status, type, spots
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{shape,jdbcType=INTEGER}, #{radius,jdbcType=DOUBLE}, #{purpose,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{spots,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sichuang.bean.entity.Fence" >
    insert into fence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="shape != null" >
        shape,
      </if>
      <if test="radius != null" >
        radius,
      </if>
      <if test="purpose != null" >
        purpose,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="spots != null" >
        spots,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="shape != null" >
        #{shape,jdbcType=INTEGER},
      </if>
      <if test="radius != null" >
        #{radius,jdbcType=DOUBLE},
      </if>
      <if test="purpose != null" >
        #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="spots != null" >
        #{spots,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sichuang.bean.entity.FenceExample" resultType="java.lang.Integer" >
    select count(*) from fence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fence
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.shape != null" >
        shape = #{record.shape,jdbcType=INTEGER},
      </if>
      <if test="record.radius != null" >
        radius = #{record.radius,jdbcType=DOUBLE},
      </if>
      <if test="record.purpose != null" >
        purpose = #{record.purpose,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.spots != null" >
        spots = #{record.spots,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update fence
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      shape = #{record.shape,jdbcType=INTEGER},
      radius = #{record.radius,jdbcType=DOUBLE},
      purpose = #{record.purpose,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=DATE},
      endTime = #{record.endtime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      spots = #{record.spots,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fence
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      shape = #{record.shape,jdbcType=INTEGER},
      radius = #{record.radius,jdbcType=DOUBLE},
      purpose = #{record.purpose,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=DATE},
      endTime = #{record.endtime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sichuang.bean.entity.Fence" >
    update fence
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="shape != null" >
        shape = #{shape,jdbcType=INTEGER},
      </if>
      <if test="radius != null" >
        radius = #{radius,jdbcType=DOUBLE},
      </if>
      <if test="purpose != null" >
        purpose = #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="spots != null" >
        spots = #{spots,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sichuang.bean.entity.Fence" >
    update fence
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      shape = #{shape,jdbcType=INTEGER},
      radius = #{radius,jdbcType=DOUBLE},
      purpose = #{purpose,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=DATE},
      endTime = #{endtime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      spots = #{spots,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sichuang.bean.entity.Fence" >
    update fence
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      shape = #{shape,jdbcType=INTEGER},
      radius = #{radius,jdbcType=DOUBLE},
      purpose = #{purpose,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=DATE},
      endTime = #{endtime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>