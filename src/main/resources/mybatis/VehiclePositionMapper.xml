<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sichuang.service.impl.dao.impl.mybatis.VehiclePositionMapper" >
  <resultMap id="BaseResultMap" type="com.sichuang.bean.entity.VehiclePosition" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="vehicleNo" jdbcType="VARCHAR" />
    <result column="vehicle_region_code" property="vehicleRegionCode" jdbcType="INTEGER" />
    <result column="position_time" property="positionTime" jdbcType="BIGINT" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="speed" property="speed" jdbcType="DECIMAL" />
    <result column="direction" property="direction" jdbcType="DECIMAL" />
    <result column="elevation" property="elevation" jdbcType="DECIMAL" />
    <result column="mileage" property="mileage" jdbcType="DECIMAL" />
    <result column="encrypt" property="encrypt" jdbcType="INTEGER" />
    <result column="warn_status" property="warnStatus" jdbcType="INTEGER" />
    <result column="veh_status" property="vehStatus" jdbcType="INTEGER" />
    <result column="biz_status" property="bizStatus" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, vehicle_no, vehicle_region_code, position_time, longitude, latitude, 
    speed, direction, elevation, mileage, encrypt, warn_status, veh_status, biz_status, 
    order_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sichuang.bean.entity.VehiclePositionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vehicle_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vehicle_position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vehicle_position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sichuang.bean.entity.VehiclePositionExample" >
    delete from vehicle_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sichuang.bean.entity.VehiclePosition" >
    insert into vehicle_position (id, company_id, vehicle_no, 
      vehicle_region_code, position_time, longitude, 
      latitude, speed, direction, 
      elevation, mileage, encrypt, 
      warn_status, veh_status, biz_status, 
      order_id)
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, 
      #{vehicleRegionCode,jdbcType=INTEGER}, #{positionTime,jdbcType=BIGINT}, #{longitude,jdbcType=DOUBLE}, 
      #{latitude,jdbcType=DOUBLE}, #{speed,jdbcType=DECIMAL}, #{direction,jdbcType=DECIMAL}, 
      #{elevation,jdbcType=DECIMAL}, #{mileage,jdbcType=DECIMAL}, #{encrypt,jdbcType=INTEGER}, 
      #{warnStatus,jdbcType=INTEGER}, #{vehStatus,jdbcType=INTEGER}, #{bizStatus,jdbcType=INTEGER}, 
      #{orderId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sichuang.bean.entity.VehiclePosition" >
    insert into vehicle_position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="vehicleNo != null" >
        vehicle_no,
      </if>
      <if test="vehicleRegionCode != null" >
        vehicle_region_code,
      </if>
      <if test="positionTime != null" >
        position_time,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="direction != null" >
        direction,
      </if>
      <if test="elevation != null" >
        elevation,
      </if>
      <if test="mileage != null" >
        mileage,
      </if>
      <if test="encrypt != null" >
        encrypt,
      </if>
      <if test="warnStatus != null" >
        warn_status,
      </if>
      <if test="vehStatus != null" >
        veh_status,
      </if>
      <if test="bizStatus != null" >
        biz_status,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="vehicleRegionCode != null" >
        #{vehicleRegionCode,jdbcType=INTEGER},
      </if>
      <if test="positionTime != null" >
        #{positionTime,jdbcType=BIGINT},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=DECIMAL},
      </if>
      <if test="direction != null" >
        #{direction,jdbcType=DECIMAL},
      </if>
      <if test="elevation != null" >
        #{elevation,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null" >
        #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="encrypt != null" >
        #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="warnStatus != null" >
        #{warnStatus,jdbcType=INTEGER},
      </if>
      <if test="vehStatus != null" >
        #{vehStatus,jdbcType=INTEGER},
      </if>
      <if test="bizStatus != null" >
        #{bizStatus,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sichuang.bean.entity.VehiclePositionExample" resultType="java.lang.Integer" >
    select count(*) from vehicle_position
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vehicle_position
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.vehicleNo != null" >
        vehicle_no = #{record.vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="record.vehicleRegionCode != null" >
        vehicle_region_code = #{record.vehicleRegionCode,jdbcType=INTEGER},
      </if>
      <if test="record.positionTime != null" >
        position_time = #{record.positionTime,jdbcType=BIGINT},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.speed != null" >
        speed = #{record.speed,jdbcType=DECIMAL},
      </if>
      <if test="record.direction != null" >
        direction = #{record.direction,jdbcType=DECIMAL},
      </if>
      <if test="record.elevation != null" >
        elevation = #{record.elevation,jdbcType=DECIMAL},
      </if>
      <if test="record.mileage != null" >
        mileage = #{record.mileage,jdbcType=DECIMAL},
      </if>
      <if test="record.encrypt != null" >
        encrypt = #{record.encrypt,jdbcType=INTEGER},
      </if>
      <if test="record.warnStatus != null" >
        warn_status = #{record.warnStatus,jdbcType=INTEGER},
      </if>
      <if test="record.vehStatus != null" >
        veh_status = #{record.vehStatus,jdbcType=INTEGER},
      </if>
      <if test="record.bizStatus != null" >
        biz_status = #{record.bizStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vehicle_position
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      vehicle_no = #{record.vehicleNo,jdbcType=VARCHAR},
      vehicle_region_code = #{record.vehicleRegionCode,jdbcType=INTEGER},
      position_time = #{record.positionTime,jdbcType=BIGINT},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      speed = #{record.speed,jdbcType=DECIMAL},
      direction = #{record.direction,jdbcType=DECIMAL},
      elevation = #{record.elevation,jdbcType=DECIMAL},
      mileage = #{record.mileage,jdbcType=DECIMAL},
      encrypt = #{record.encrypt,jdbcType=INTEGER},
      warn_status = #{record.warnStatus,jdbcType=INTEGER},
      veh_status = #{record.vehStatus,jdbcType=INTEGER},
      biz_status = #{record.bizStatus,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sichuang.bean.entity.VehiclePosition" >
    update vehicle_position
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        vehicle_no = #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="vehicleRegionCode != null" >
        vehicle_region_code = #{vehicleRegionCode,jdbcType=INTEGER},
      </if>
      <if test="positionTime != null" >
        position_time = #{positionTime,jdbcType=BIGINT},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=DECIMAL},
      </if>
      <if test="direction != null" >
        direction = #{direction,jdbcType=DECIMAL},
      </if>
      <if test="elevation != null" >
        elevation = #{elevation,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null" >
        mileage = #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="encrypt != null" >
        encrypt = #{encrypt,jdbcType=INTEGER},
      </if>
      <if test="warnStatus != null" >
        warn_status = #{warnStatus,jdbcType=INTEGER},
      </if>
      <if test="vehStatus != null" >
        veh_status = #{vehStatus,jdbcType=INTEGER},
      </if>
      <if test="bizStatus != null" >
        biz_status = #{bizStatus,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sichuang.bean.entity.VehiclePosition" >
    update vehicle_position
    set company_id = #{companyId,jdbcType=VARCHAR},
      vehicle_no = #{vehicleNo,jdbcType=VARCHAR},
      vehicle_region_code = #{vehicleRegionCode,jdbcType=INTEGER},
      position_time = #{positionTime,jdbcType=BIGINT},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      speed = #{speed,jdbcType=DECIMAL},
      direction = #{direction,jdbcType=DECIMAL},
      elevation = #{elevation,jdbcType=DECIMAL},
      mileage = #{mileage,jdbcType=DECIMAL},
      encrypt = #{encrypt,jdbcType=INTEGER},
      warn_status = #{warnStatus,jdbcType=INTEGER},
      veh_status = #{vehStatus,jdbcType=INTEGER},
      biz_status = #{bizStatus,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>