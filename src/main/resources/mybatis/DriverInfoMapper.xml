<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sichuang.service.impl.dao.impl.mybatis.DriverInfoMapper" >
  <resultMap id="BaseResultMap" type="com.sichuang.bean.entity.DriverInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="INTEGER" />
    <result column="driver_name" property="driverName" jdbcType="VARCHAR" />
    <result column="driver_phone" property="driverPhone" jdbcType="VARCHAR" />
    <result column="driver_gender" property="driverGender" jdbcType="VARCHAR" />
    <result column="driver_birthday" property="driverBirthday" jdbcType="INTEGER" />
    <result column="driver_nationality" property="driverNationality" jdbcType="VARCHAR" />
    <result column="driver_nation" property="driverNation" jdbcType="VARCHAR" />
    <result column="driver_marital_status" property="driverMaritalStatus" jdbcType="VARCHAR" />
    <result column="driver_language_level" property="driverLanguageLevel" jdbcType="VARCHAR" />
    <result column="driver_education" property="driverEducation" jdbcType="VARCHAR" />
    <result column="driver_census" property="driverCensus" jdbcType="VARCHAR" />
    <result column="driver_address" property="driverAddress" jdbcType="VARCHAR" />
    <result column="driver_contact_address" property="driverContactAddress" jdbcType="VARCHAR" />
    <result column="photo_id" property="photoId" jdbcType="VARCHAR" />
    <result column="license_id" property="licenseId" jdbcType="VARCHAR" />
    <result column="license_photo_id" property="licensePhotoId" jdbcType="VARCHAR" />
    <result column="driver_type" property="driverType" jdbcType="VARCHAR" />
    <result column="get_driver_license_date" property="getDriverLicenseDate" jdbcType="INTEGER" />
    <result column="driver_license_on" property="driverLicenseOn" jdbcType="INTEGER" />
    <result column="driver_license_off" property="driverLicenseOff" jdbcType="INTEGER" />
    <result column="taxi_driver" property="taxiDriver" jdbcType="INTEGER" />
    <result column="certificate_no" property="certificateNo" jdbcType="VARCHAR" />
    <result column="network_car_issue_organization" property="networkCarIssueOrganization" jdbcType="VARCHAR" />
    <result column="network_car_issue_date" property="networkCarIssueDate" jdbcType="INTEGER" />
    <result column="get_network_car_proof_date" property="getNetworkCarProofDate" jdbcType="INTEGER" />
    <result column="network_car_proof_on" property="networkCarProofOn" jdbcType="INTEGER" />
    <result column="network_car_proof_off" property="networkCarProofOff" jdbcType="INTEGER" />
    <result column="register_date" property="registerDate" jdbcType="INTEGER" />
    <result column="fullTime_driver" property="fulltimeDriver" jdbcType="INTEGER" />
    <result column="in_driver_blacklist" property="inDriverBlacklist" jdbcType="INTEGER" />
    <result column="commercial_type" property="commercialType" jdbcType="INTEGER" />
    <result column="contract_company" property="contractCompany" jdbcType="VARCHAR" />
    <result column="contract_on" property="contractOn" jdbcType="INTEGER" />
    <result column="contract_off" property="contractOff" jdbcType="INTEGER" />
    <result column="emergency_contact" property="emergencyContact" jdbcType="VARCHAR" />
    <result column="emergency_contact_phone" property="emergencyContactPhone" jdbcType="VARCHAR" />
    <result column="emergency_contact_address" property="emergencyContactAddress" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_id, address, driver_name, driver_phone, driver_gender, driver_birthday, 
    driver_nationality, driver_nation, driver_marital_status, driver_language_level, 
    driver_education, driver_census, driver_address, driver_contact_address, photo_id, 
    license_id, license_photo_id, driver_type, get_driver_license_date, driver_license_on, 
    driver_license_off, taxi_driver, certificate_no, network_car_issue_organization, 
    network_car_issue_date, get_network_car_proof_date, network_car_proof_on, network_car_proof_off, 
    register_date, fullTime_driver, in_driver_blacklist, commercial_type, contract_company, 
    contract_on, contract_off, emergency_contact, emergency_contact_phone, emergency_contact_address, 
    state, flag, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sichuang.bean.entity.DriverInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from driver_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from driver_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from driver_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sichuang.bean.entity.DriverInfoExample" >
    delete from driver_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sichuang.bean.entity.DriverInfo" >
    insert into driver_info (id, company_id, address, 
      driver_name, driver_phone, driver_gender, 
      driver_birthday, driver_nationality, driver_nation, 
      driver_marital_status, driver_language_level, 
      driver_education, driver_census, driver_address, 
      driver_contact_address, photo_id, license_id, 
      license_photo_id, driver_type, get_driver_license_date, 
      driver_license_on, driver_license_off, taxi_driver, 
      certificate_no, network_car_issue_organization, 
      network_car_issue_date, get_network_car_proof_date, 
      network_car_proof_on, network_car_proof_off, 
      register_date, fullTime_driver, in_driver_blacklist, 
      commercial_type, contract_company, contract_on, 
      contract_off, emergency_contact, emergency_contact_phone, 
      emergency_contact_address, state, flag, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=VARCHAR}, #{address,jdbcType=INTEGER}, 
      #{driverName,jdbcType=VARCHAR}, #{driverPhone,jdbcType=VARCHAR}, #{driverGender,jdbcType=VARCHAR}, 
      #{driverBirthday,jdbcType=INTEGER}, #{driverNationality,jdbcType=VARCHAR}, #{driverNation,jdbcType=VARCHAR}, 
      #{driverMaritalStatus,jdbcType=VARCHAR}, #{driverLanguageLevel,jdbcType=VARCHAR}, 
      #{driverEducation,jdbcType=VARCHAR}, #{driverCensus,jdbcType=VARCHAR}, #{driverAddress,jdbcType=VARCHAR}, 
      #{driverContactAddress,jdbcType=VARCHAR}, #{photoId,jdbcType=VARCHAR}, #{licenseId,jdbcType=VARCHAR}, 
      #{licensePhotoId,jdbcType=VARCHAR}, #{driverType,jdbcType=VARCHAR}, #{getDriverLicenseDate,jdbcType=INTEGER}, 
      #{driverLicenseOn,jdbcType=INTEGER}, #{driverLicenseOff,jdbcType=INTEGER}, #{taxiDriver,jdbcType=INTEGER}, 
      #{certificateNo,jdbcType=VARCHAR}, #{networkCarIssueOrganization,jdbcType=VARCHAR}, 
      #{networkCarIssueDate,jdbcType=INTEGER}, #{getNetworkCarProofDate,jdbcType=INTEGER}, 
      #{networkCarProofOn,jdbcType=INTEGER}, #{networkCarProofOff,jdbcType=INTEGER}, 
      #{registerDate,jdbcType=INTEGER}, #{fulltimeDriver,jdbcType=INTEGER}, #{inDriverBlacklist,jdbcType=INTEGER}, 
      #{commercialType,jdbcType=INTEGER}, #{contractCompany,jdbcType=VARCHAR}, #{contractOn,jdbcType=INTEGER}, 
      #{contractOff,jdbcType=INTEGER}, #{emergencyContact,jdbcType=VARCHAR}, #{emergencyContactPhone,jdbcType=VARCHAR}, 
      #{emergencyContactAddress,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sichuang.bean.entity.DriverInfo" >
    insert into driver_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="driverName != null" >
        driver_name,
      </if>
      <if test="driverPhone != null" >
        driver_phone,
      </if>
      <if test="driverGender != null" >
        driver_gender,
      </if>
      <if test="driverBirthday != null" >
        driver_birthday,
      </if>
      <if test="driverNationality != null" >
        driver_nationality,
      </if>
      <if test="driverNation != null" >
        driver_nation,
      </if>
      <if test="driverMaritalStatus != null" >
        driver_marital_status,
      </if>
      <if test="driverLanguageLevel != null" >
        driver_language_level,
      </if>
      <if test="driverEducation != null" >
        driver_education,
      </if>
      <if test="driverCensus != null" >
        driver_census,
      </if>
      <if test="driverAddress != null" >
        driver_address,
      </if>
      <if test="driverContactAddress != null" >
        driver_contact_address,
      </if>
      <if test="photoId != null" >
        photo_id,
      </if>
      <if test="licenseId != null" >
        license_id,
      </if>
      <if test="licensePhotoId != null" >
        license_photo_id,
      </if>
      <if test="driverType != null" >
        driver_type,
      </if>
      <if test="getDriverLicenseDate != null" >
        get_driver_license_date,
      </if>
      <if test="driverLicenseOn != null" >
        driver_license_on,
      </if>
      <if test="driverLicenseOff != null" >
        driver_license_off,
      </if>
      <if test="taxiDriver != null" >
        taxi_driver,
      </if>
      <if test="certificateNo != null" >
        certificate_no,
      </if>
      <if test="networkCarIssueOrganization != null" >
        network_car_issue_organization,
      </if>
      <if test="networkCarIssueDate != null" >
        network_car_issue_date,
      </if>
      <if test="getNetworkCarProofDate != null" >
        get_network_car_proof_date,
      </if>
      <if test="networkCarProofOn != null" >
        network_car_proof_on,
      </if>
      <if test="networkCarProofOff != null" >
        network_car_proof_off,
      </if>
      <if test="registerDate != null" >
        register_date,
      </if>
      <if test="fulltimeDriver != null" >
        fullTime_driver,
      </if>
      <if test="inDriverBlacklist != null" >
        in_driver_blacklist,
      </if>
      <if test="commercialType != null" >
        commercial_type,
      </if>
      <if test="contractCompany != null" >
        contract_company,
      </if>
      <if test="contractOn != null" >
        contract_on,
      </if>
      <if test="contractOff != null" >
        contract_off,
      </if>
      <if test="emergencyContact != null" >
        emergency_contact,
      </if>
      <if test="emergencyContactPhone != null" >
        emergency_contact_phone,
      </if>
      <if test="emergencyContactAddress != null" >
        emergency_contact_address,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=INTEGER},
      </if>
      <if test="driverName != null" >
        #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="driverPhone != null" >
        #{driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="driverGender != null" >
        #{driverGender,jdbcType=VARCHAR},
      </if>
      <if test="driverBirthday != null" >
        #{driverBirthday,jdbcType=INTEGER},
      </if>
      <if test="driverNationality != null" >
        #{driverNationality,jdbcType=VARCHAR},
      </if>
      <if test="driverNation != null" >
        #{driverNation,jdbcType=VARCHAR},
      </if>
      <if test="driverMaritalStatus != null" >
        #{driverMaritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="driverLanguageLevel != null" >
        #{driverLanguageLevel,jdbcType=VARCHAR},
      </if>
      <if test="driverEducation != null" >
        #{driverEducation,jdbcType=VARCHAR},
      </if>
      <if test="driverCensus != null" >
        #{driverCensus,jdbcType=VARCHAR},
      </if>
      <if test="driverAddress != null" >
        #{driverAddress,jdbcType=VARCHAR},
      </if>
      <if test="driverContactAddress != null" >
        #{driverContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="photoId != null" >
        #{photoId,jdbcType=VARCHAR},
      </if>
      <if test="licenseId != null" >
        #{licenseId,jdbcType=VARCHAR},
      </if>
      <if test="licensePhotoId != null" >
        #{licensePhotoId,jdbcType=VARCHAR},
      </if>
      <if test="driverType != null" >
        #{driverType,jdbcType=VARCHAR},
      </if>
      <if test="getDriverLicenseDate != null" >
        #{getDriverLicenseDate,jdbcType=INTEGER},
      </if>
      <if test="driverLicenseOn != null" >
        #{driverLicenseOn,jdbcType=INTEGER},
      </if>
      <if test="driverLicenseOff != null" >
        #{driverLicenseOff,jdbcType=INTEGER},
      </if>
      <if test="taxiDriver != null" >
        #{taxiDriver,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="networkCarIssueOrganization != null" >
        #{networkCarIssueOrganization,jdbcType=VARCHAR},
      </if>
      <if test="networkCarIssueDate != null" >
        #{networkCarIssueDate,jdbcType=INTEGER},
      </if>
      <if test="getNetworkCarProofDate != null" >
        #{getNetworkCarProofDate,jdbcType=INTEGER},
      </if>
      <if test="networkCarProofOn != null" >
        #{networkCarProofOn,jdbcType=INTEGER},
      </if>
      <if test="networkCarProofOff != null" >
        #{networkCarProofOff,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null" >
        #{registerDate,jdbcType=INTEGER},
      </if>
      <if test="fulltimeDriver != null" >
        #{fulltimeDriver,jdbcType=INTEGER},
      </if>
      <if test="inDriverBlacklist != null" >
        #{inDriverBlacklist,jdbcType=INTEGER},
      </if>
      <if test="commercialType != null" >
        #{commercialType,jdbcType=INTEGER},
      </if>
      <if test="contractCompany != null" >
        #{contractCompany,jdbcType=VARCHAR},
      </if>
      <if test="contractOn != null" >
        #{contractOn,jdbcType=INTEGER},
      </if>
      <if test="contractOff != null" >
        #{contractOff,jdbcType=INTEGER},
      </if>
      <if test="emergencyContact != null" >
        #{emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContactPhone != null" >
        #{emergencyContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContactAddress != null" >
        #{emergencyContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sichuang.bean.entity.DriverInfoExample" resultType="java.lang.Integer" >
    select count(*) from driver_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update driver_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=INTEGER},
      </if>
      <if test="record.driverName != null" >
        driver_name = #{record.driverName,jdbcType=VARCHAR},
      </if>
      <if test="record.driverPhone != null" >
        driver_phone = #{record.driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.driverGender != null" >
        driver_gender = #{record.driverGender,jdbcType=VARCHAR},
      </if>
      <if test="record.driverBirthday != null" >
        driver_birthday = #{record.driverBirthday,jdbcType=INTEGER},
      </if>
      <if test="record.driverNationality != null" >
        driver_nationality = #{record.driverNationality,jdbcType=VARCHAR},
      </if>
      <if test="record.driverNation != null" >
        driver_nation = #{record.driverNation,jdbcType=VARCHAR},
      </if>
      <if test="record.driverMaritalStatus != null" >
        driver_marital_status = #{record.driverMaritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.driverLanguageLevel != null" >
        driver_language_level = #{record.driverLanguageLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.driverEducation != null" >
        driver_education = #{record.driverEducation,jdbcType=VARCHAR},
      </if>
      <if test="record.driverCensus != null" >
        driver_census = #{record.driverCensus,jdbcType=VARCHAR},
      </if>
      <if test="record.driverAddress != null" >
        driver_address = #{record.driverAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.driverContactAddress != null" >
        driver_contact_address = #{record.driverContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.photoId != null" >
        photo_id = #{record.photoId,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseId != null" >
        license_id = #{record.licenseId,jdbcType=VARCHAR},
      </if>
      <if test="record.licensePhotoId != null" >
        license_photo_id = #{record.licensePhotoId,jdbcType=VARCHAR},
      </if>
      <if test="record.driverType != null" >
        driver_type = #{record.driverType,jdbcType=VARCHAR},
      </if>
      <if test="record.getDriverLicenseDate != null" >
        get_driver_license_date = #{record.getDriverLicenseDate,jdbcType=INTEGER},
      </if>
      <if test="record.driverLicenseOn != null" >
        driver_license_on = #{record.driverLicenseOn,jdbcType=INTEGER},
      </if>
      <if test="record.driverLicenseOff != null" >
        driver_license_off = #{record.driverLicenseOff,jdbcType=INTEGER},
      </if>
      <if test="record.taxiDriver != null" >
        taxi_driver = #{record.taxiDriver,jdbcType=INTEGER},
      </if>
      <if test="record.certificateNo != null" >
        certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.networkCarIssueOrganization != null" >
        network_car_issue_organization = #{record.networkCarIssueOrganization,jdbcType=VARCHAR},
      </if>
      <if test="record.networkCarIssueDate != null" >
        network_car_issue_date = #{record.networkCarIssueDate,jdbcType=INTEGER},
      </if>
      <if test="record.getNetworkCarProofDate != null" >
        get_network_car_proof_date = #{record.getNetworkCarProofDate,jdbcType=INTEGER},
      </if>
      <if test="record.networkCarProofOn != null" >
        network_car_proof_on = #{record.networkCarProofOn,jdbcType=INTEGER},
      </if>
      <if test="record.networkCarProofOff != null" >
        network_car_proof_off = #{record.networkCarProofOff,jdbcType=INTEGER},
      </if>
      <if test="record.registerDate != null" >
        register_date = #{record.registerDate,jdbcType=INTEGER},
      </if>
      <if test="record.fulltimeDriver != null" >
        fullTime_driver = #{record.fulltimeDriver,jdbcType=INTEGER},
      </if>
      <if test="record.inDriverBlacklist != null" >
        in_driver_blacklist = #{record.inDriverBlacklist,jdbcType=INTEGER},
      </if>
      <if test="record.commercialType != null" >
        commercial_type = #{record.commercialType,jdbcType=INTEGER},
      </if>
      <if test="record.contractCompany != null" >
        contract_company = #{record.contractCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.contractOn != null" >
        contract_on = #{record.contractOn,jdbcType=INTEGER},
      </if>
      <if test="record.contractOff != null" >
        contract_off = #{record.contractOff,jdbcType=INTEGER},
      </if>
      <if test="record.emergencyContact != null" >
        emergency_contact = #{record.emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="record.emergencyContactPhone != null" >
        emergency_contact_phone = #{record.emergencyContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.emergencyContactAddress != null" >
        emergency_contact_address = #{record.emergencyContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update driver_info
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=INTEGER},
      driver_name = #{record.driverName,jdbcType=VARCHAR},
      driver_phone = #{record.driverPhone,jdbcType=VARCHAR},
      driver_gender = #{record.driverGender,jdbcType=VARCHAR},
      driver_birthday = #{record.driverBirthday,jdbcType=INTEGER},
      driver_nationality = #{record.driverNationality,jdbcType=VARCHAR},
      driver_nation = #{record.driverNation,jdbcType=VARCHAR},
      driver_marital_status = #{record.driverMaritalStatus,jdbcType=VARCHAR},
      driver_language_level = #{record.driverLanguageLevel,jdbcType=VARCHAR},
      driver_education = #{record.driverEducation,jdbcType=VARCHAR},
      driver_census = #{record.driverCensus,jdbcType=VARCHAR},
      driver_address = #{record.driverAddress,jdbcType=VARCHAR},
      driver_contact_address = #{record.driverContactAddress,jdbcType=VARCHAR},
      photo_id = #{record.photoId,jdbcType=VARCHAR},
      license_id = #{record.licenseId,jdbcType=VARCHAR},
      license_photo_id = #{record.licensePhotoId,jdbcType=VARCHAR},
      driver_type = #{record.driverType,jdbcType=VARCHAR},
      get_driver_license_date = #{record.getDriverLicenseDate,jdbcType=INTEGER},
      driver_license_on = #{record.driverLicenseOn,jdbcType=INTEGER},
      driver_license_off = #{record.driverLicenseOff,jdbcType=INTEGER},
      taxi_driver = #{record.taxiDriver,jdbcType=INTEGER},
      certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      network_car_issue_organization = #{record.networkCarIssueOrganization,jdbcType=VARCHAR},
      network_car_issue_date = #{record.networkCarIssueDate,jdbcType=INTEGER},
      get_network_car_proof_date = #{record.getNetworkCarProofDate,jdbcType=INTEGER},
      network_car_proof_on = #{record.networkCarProofOn,jdbcType=INTEGER},
      network_car_proof_off = #{record.networkCarProofOff,jdbcType=INTEGER},
      register_date = #{record.registerDate,jdbcType=INTEGER},
      fullTime_driver = #{record.fulltimeDriver,jdbcType=INTEGER},
      in_driver_blacklist = #{record.inDriverBlacklist,jdbcType=INTEGER},
      commercial_type = #{record.commercialType,jdbcType=INTEGER},
      contract_company = #{record.contractCompany,jdbcType=VARCHAR},
      contract_on = #{record.contractOn,jdbcType=INTEGER},
      contract_off = #{record.contractOff,jdbcType=INTEGER},
      emergency_contact = #{record.emergencyContact,jdbcType=VARCHAR},
      emergency_contact_phone = #{record.emergencyContactPhone,jdbcType=VARCHAR},
      emergency_contact_address = #{record.emergencyContactAddress,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sichuang.bean.entity.DriverInfo" >
    update driver_info
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=INTEGER},
      </if>
      <if test="driverName != null" >
        driver_name = #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="driverPhone != null" >
        driver_phone = #{driverPhone,jdbcType=VARCHAR},
      </if>
      <if test="driverGender != null" >
        driver_gender = #{driverGender,jdbcType=VARCHAR},
      </if>
      <if test="driverBirthday != null" >
        driver_birthday = #{driverBirthday,jdbcType=INTEGER},
      </if>
      <if test="driverNationality != null" >
        driver_nationality = #{driverNationality,jdbcType=VARCHAR},
      </if>
      <if test="driverNation != null" >
        driver_nation = #{driverNation,jdbcType=VARCHAR},
      </if>
      <if test="driverMaritalStatus != null" >
        driver_marital_status = #{driverMaritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="driverLanguageLevel != null" >
        driver_language_level = #{driverLanguageLevel,jdbcType=VARCHAR},
      </if>
      <if test="driverEducation != null" >
        driver_education = #{driverEducation,jdbcType=VARCHAR},
      </if>
      <if test="driverCensus != null" >
        driver_census = #{driverCensus,jdbcType=VARCHAR},
      </if>
      <if test="driverAddress != null" >
        driver_address = #{driverAddress,jdbcType=VARCHAR},
      </if>
      <if test="driverContactAddress != null" >
        driver_contact_address = #{driverContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="photoId != null" >
        photo_id = #{photoId,jdbcType=VARCHAR},
      </if>
      <if test="licenseId != null" >
        license_id = #{licenseId,jdbcType=VARCHAR},
      </if>
      <if test="licensePhotoId != null" >
        license_photo_id = #{licensePhotoId,jdbcType=VARCHAR},
      </if>
      <if test="driverType != null" >
        driver_type = #{driverType,jdbcType=VARCHAR},
      </if>
      <if test="getDriverLicenseDate != null" >
        get_driver_license_date = #{getDriverLicenseDate,jdbcType=INTEGER},
      </if>
      <if test="driverLicenseOn != null" >
        driver_license_on = #{driverLicenseOn,jdbcType=INTEGER},
      </if>
      <if test="driverLicenseOff != null" >
        driver_license_off = #{driverLicenseOff,jdbcType=INTEGER},
      </if>
      <if test="taxiDriver != null" >
        taxi_driver = #{taxiDriver,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        certificate_no = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="networkCarIssueOrganization != null" >
        network_car_issue_organization = #{networkCarIssueOrganization,jdbcType=VARCHAR},
      </if>
      <if test="networkCarIssueDate != null" >
        network_car_issue_date = #{networkCarIssueDate,jdbcType=INTEGER},
      </if>
      <if test="getNetworkCarProofDate != null" >
        get_network_car_proof_date = #{getNetworkCarProofDate,jdbcType=INTEGER},
      </if>
      <if test="networkCarProofOn != null" >
        network_car_proof_on = #{networkCarProofOn,jdbcType=INTEGER},
      </if>
      <if test="networkCarProofOff != null" >
        network_car_proof_off = #{networkCarProofOff,jdbcType=INTEGER},
      </if>
      <if test="registerDate != null" >
        register_date = #{registerDate,jdbcType=INTEGER},
      </if>
      <if test="fulltimeDriver != null" >
        fullTime_driver = #{fulltimeDriver,jdbcType=INTEGER},
      </if>
      <if test="inDriverBlacklist != null" >
        in_driver_blacklist = #{inDriverBlacklist,jdbcType=INTEGER},
      </if>
      <if test="commercialType != null" >
        commercial_type = #{commercialType,jdbcType=INTEGER},
      </if>
      <if test="contractCompany != null" >
        contract_company = #{contractCompany,jdbcType=VARCHAR},
      </if>
      <if test="contractOn != null" >
        contract_on = #{contractOn,jdbcType=INTEGER},
      </if>
      <if test="contractOff != null" >
        contract_off = #{contractOff,jdbcType=INTEGER},
      </if>
      <if test="emergencyContact != null" >
        emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContactPhone != null" >
        emergency_contact_phone = #{emergencyContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="emergencyContactAddress != null" >
        emergency_contact_address = #{emergencyContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sichuang.bean.entity.DriverInfo" >
    update driver_info
    set company_id = #{companyId,jdbcType=VARCHAR},
      address = #{address,jdbcType=INTEGER},
      driver_name = #{driverName,jdbcType=VARCHAR},
      driver_phone = #{driverPhone,jdbcType=VARCHAR},
      driver_gender = #{driverGender,jdbcType=VARCHAR},
      driver_birthday = #{driverBirthday,jdbcType=INTEGER},
      driver_nationality = #{driverNationality,jdbcType=VARCHAR},
      driver_nation = #{driverNation,jdbcType=VARCHAR},
      driver_marital_status = #{driverMaritalStatus,jdbcType=VARCHAR},
      driver_language_level = #{driverLanguageLevel,jdbcType=VARCHAR},
      driver_education = #{driverEducation,jdbcType=VARCHAR},
      driver_census = #{driverCensus,jdbcType=VARCHAR},
      driver_address = #{driverAddress,jdbcType=VARCHAR},
      driver_contact_address = #{driverContactAddress,jdbcType=VARCHAR},
      photo_id = #{photoId,jdbcType=VARCHAR},
      license_id = #{licenseId,jdbcType=VARCHAR},
      license_photo_id = #{licensePhotoId,jdbcType=VARCHAR},
      driver_type = #{driverType,jdbcType=VARCHAR},
      get_driver_license_date = #{getDriverLicenseDate,jdbcType=INTEGER},
      driver_license_on = #{driverLicenseOn,jdbcType=INTEGER},
      driver_license_off = #{driverLicenseOff,jdbcType=INTEGER},
      taxi_driver = #{taxiDriver,jdbcType=INTEGER},
      certificate_no = #{certificateNo,jdbcType=VARCHAR},
      network_car_issue_organization = #{networkCarIssueOrganization,jdbcType=VARCHAR},
      network_car_issue_date = #{networkCarIssueDate,jdbcType=INTEGER},
      get_network_car_proof_date = #{getNetworkCarProofDate,jdbcType=INTEGER},
      network_car_proof_on = #{networkCarProofOn,jdbcType=INTEGER},
      network_car_proof_off = #{networkCarProofOff,jdbcType=INTEGER},
      register_date = #{registerDate,jdbcType=INTEGER},
      fullTime_driver = #{fulltimeDriver,jdbcType=INTEGER},
      in_driver_blacklist = #{inDriverBlacklist,jdbcType=INTEGER},
      commercial_type = #{commercialType,jdbcType=INTEGER},
      contract_company = #{contractCompany,jdbcType=VARCHAR},
      contract_on = #{contractOn,jdbcType=INTEGER},
      contract_off = #{contractOff,jdbcType=INTEGER},
      emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
      emergency_contact_phone = #{emergencyContactPhone,jdbcType=VARCHAR},
      emergency_contact_address = #{emergencyContactAddress,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>